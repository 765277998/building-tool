import bpydef create_mat(name="Default Material"):    """新建材质"""    return bpy.data.materials.new(name)def link_mat(obj, mat):    """材质关联到模型上"""    obj.data.materials.append(mat)def set_defaults(mat, diffuse, diff_int, specular, spec_int):    mat.diffuse_color = diffuse    mat.diffuse_intensity = diff_int    mat.specular_color = specular    mat.specular_intensity = spec_intdef material_set_faces(obj, mat, faces):    if not mat:        return    if mat.name not in obj.data.materials:        link_mat(obj, mat)    mat_index = list(obj.data.materials).index(mat)    for face in faces:        face.material_index = mat_indexdef has_material(obj, name):    return name in obj.data.materials.keys()def template_create_materials(obj, mat_name, defaults):    """创建材质实例"""    if has_material(obj, mat_name):        mat = obj.data.materials[mat_name]    else:        mat = create_mat(mat_name)        link_mat(obj, mat)        set_defaults(            mat,            defaults.get('diffuse'),            defaults.get('diffuse_intensity'),            defaults.get('specular'),            defaults.get('specular_intensity')        )    return matdef floor_mat_slab(obj):    return template_create_materials(        obj,        "material_slab",        {            'diffuse': (.4, .35, .3),            'diffuse_intensity': .8,            'specular': (1, 1, 1),            'specular_intensity': 0        }    )def floor_mat_wall(obj):    return template_create_materials(        obj,        "material_wall",        {            'diffuse': (.3, .25, .13),            'diffuse_intensity': .8,            'specular': (1, 1, 1),            'specular_intensity': 0        }    )def window_mat_frame(obj):    return template_create_materials(        obj,        "material_window_frame",        {            'diffuse': (.8, .8, .8),            'diffuse_intensity': 1,            'specular': (1, 1, 1),            'specular_intensity': 0        }    )def window_mat_bars(obj):    return template_create_materials(        obj,        "material_window_bar",        {            'diffuse': (0, .6, 0),            'diffuse_intensity': 1,            'specular': (1, 1, 1),            'specular_intensity': 0        }    )def window_mat_glass(obj):    return template_create_materials(        obj,        "material_window_glass",        {            'diffuse': (0, .1, .6),            'diffuse_intensity': 1,            'specular': (1, 1, 1),            'specular_intensity': 0        }    )def door_mat_frame(obj):    return template_create_materials(        obj,        "material_door_frame",        {            'diffuse': (.8, .8, .8),            'diffuse_intensity': 1,            'specular': (1, 1, 1),            'specular_intensity': 0        }    )def door_mat_pane(obj):    return template_create_materials(        obj,        "material_door_pane",        {            'diffuse': (.13, .05, 0),            'diffuse_intensity': 1,            'specular': (1, 1, 1),            'specular_intensity': 0        }    )def door_mat_groove(obj):    return template_create_materials(        obj,        "material_door_groove",        {            'diffuse': (.13, .05, 0),            'diffuse_intensity': 1,            'specular': (1, 1, 1),            'specular_intensity': 0        }    )def door_mat_glass(obj):    return template_create_materials(        obj,        "material_door_glass",        {            'diffuse': (0, .1, .6),            'diffuse_intensity': 1,            'specular': (1, 1, 1),            'specular_intensity': 0        }    )